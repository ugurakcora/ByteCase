<div class="lg:min-h-screen bg-gradient-to-br from-cyan-400 to-blue-500 flex items-center justify-center p-4">
  <div class="relative max-w-4xl w-full">
    {{ section.settings.room_image | image_url: width: 1000 | image_tag: 
      class: 'w-full h-auto rounded-2xl shadow-xl',
      alt: section.settings.room_image.alt | escape
    }}
    
    {% for block in section.blocks %}
      {% if block.type == 'hotspot' %}
        <div class="absolute cursor-pointer hotspot-trigger" 
          style="left: {{ block.settings.x_position }}%; top: {{ block.settings.y_position }}%;"
          data-hotspot-index="{{ forloop.index0 }}"
          {{ block.shopify_attributes }}>
          <div class="w-6 h-6 bg-yellow-400 rounded-full relative">
            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-yellow-400 opacity-75"></span>
            <span class="animate-pulse absolute -inset-1 rounded-full bg-yellow-300 opacity-75"></span>
          </div>
          <div class="hotspot-popup absolute bg-white p-4 rounded-lg shadow-md z-10 hidden w-[13rem]"
            data-hotspot-index="{{ forloop.index0 }}"
            {% case block.settings.popup_direction %}
              {% when 'top' %}style="transform: translate(-50%,-100%); top: -1rem; left: 50%;"
              {% when 'bottom' %}style="transform: translate(-50%,0); top: 2.5rem; left: 50%;"
              {% when 'left' %}style="transform: translate(-100%,-50%); left: -1rem; top: 50%;"
              {% when 'right' %}style="transform: translate(0,-50%); left: 2.5rem; top: 50%;"
              {% else %}style="transform: translate(-50%,-100%); top: -1rem; left: 50%;"
            {% endcase %}
          >
            <button type="button" class="absolute top-2 right-2 text-gray-400 hover:text-black text-2xl font-bold close-hotspot-popup" aria-label="Kapat">&times;</button>
            {{ block.settings.product.featured_image | image_url: width: 400 | image_tag: 
              class: 'w-full h-32 object-fill rounded-lg mb-3 mt-5',
              alt: block.settings.product.featured_image.alt | escape
            }}
            <h3 class="text-lg font-semibold text-gray-800">{{ block.settings.product.title }}</h3>
            <p class="text-gray-600 my-2">{{ block.settings.product.price | money }}</p>
            <div class="flex gap-2">
              <form method="post" action="/cart/add">
                <input type="hidden" name="id" value="{{ block.settings.product.first_available_variant.id }}" />
                <button type="submit" class="bg-yellow-400 text-black px-4 py-2 rounded hover:bg-yellow-500 transition-colors text-center h-[60px]">
                  {{ 'products.product.add_to_cart' | t }}
                </button>
              </form>
              <a href="{{ block.settings.product.url }}" class="bg-gray-100 text-gray-800 px-4 py-2 rounded hover:bg-gray-200 transition-colors text-center h-[60px]">
                {{ 'products.product.view_details' | t }}
              </a>
            </div>
            {% case block.settings.popup_direction %}
              {% when 'top' %}
                <div class="absolute -bottom-2 left-1/2 w-4 h-4 bg-white transform rotate-45 -translate-x-1/2"></div>
              {% when 'bottom' %}
                <div class="absolute -top-2 left-1/2 w-4 h-4 bg-white transform rotate-45 -translate-x-1/2"></div>
              {% when 'left' %}
                <div class="absolute top-1/2 -right-2 w-4 h-4 bg-white transform rotate-45 -translate-y-1/2"></div>
              {% when 'right' %}
                <div class="absolute top-1/2 -left-2 w-4 h-4 bg-white transform rotate-45 -translate-y-1/2"></div>
              {% else %}
                <div class="absolute -bottom-2 left-1/2 w-4 h-4 bg-white transform rotate-45 -translate-x-1/2"></div>
            {% endcase %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const triggers = document.querySelectorAll('.hotspot-trigger');
  const popups = document.querySelectorAll('.hotspot-popup');

  triggers.forEach(trigger => {
    trigger.addEventListener('click', function(e) {
      e.stopPropagation();
      const index = trigger.getAttribute('data-hotspot-index');
      const popup = document.querySelector('.hotspot-popup[data-hotspot-index="' + index + '"]');
      popups.forEach(p => { if(p !== popup) p.classList.add('hidden'); });
      popup.classList.toggle('hidden');
    });
  });

  document.addEventListener('click', function() {
    popups.forEach(popup => popup.classList.add('hidden'));
  });

  popups.forEach(popup => {
    popup.addEventListener('click', function(e) {
      e.stopPropagation();
    });
  });

  document.querySelectorAll('.close-hotspot-popup').forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.stopPropagation();
      btn.closest('.hotspot-popup').classList.add('hidden');
    });
  });
});
</script>

{% schema %}
{
  "name": "Hover Product",
  "settings": [
    {
      "type": "image_picker",
      "id": "room_image",
      "label": "Room Image"
    }
  ],
  "blocks": [
    {
      "type": "hotspot",
      "name": "Product Hotspot",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "range",
          "id": "x_position",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "X Position",
          "default": 50
        },
        {
          "type": "range",
          "id": "y_position",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Y Position",
          "default": 50
        },
        {
          "type": "select",
          "id": "popup_direction",
          "label": "Popup Yönü",
          "options": [
            { "value": "top", "label": "Yukarı" },
            { "value": "bottom", "label": "Aşağı" },
            { "value": "left", "label": "Sola" },
            { "value": "right", "label": "Sağa" }
          ],
          "default": "top"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hover Product",
      "category": "Interactive"
    }
  ]
}
{% endschema %}